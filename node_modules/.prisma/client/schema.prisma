// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  // ระบุไฟล์ seed script
  seed     = "ts-node prisma/seed.ts"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// โมเดลสำหรับผู้ใช้งาน
model User {
  id               String   @id @default(uuid())
  username         String   @unique // ชื่อผู้ใช้สำหรับเข้าสู่ระบบ (รหัสนักศึกษาหรือรหัสอาจารย์)
  email            String   @unique
  password         String
  role             String // "admin", "advisor", "student"
  firstName        String
  lastName         String
  title            String? // คำนำหน้าชื่อ
  position         String? // ตำแหน่ง
  academicPosition String? // ตำแหน่งทางวิชาการ
  office           String? // ห้องทำงาน
  phone            String?
  studentId        String? // รหัสนักศึกษา (เฉพาะนักศึกษา)
  department       String? // ภาควิชา/คณะ
  profileImage     String? // URL รูปโปรไฟล์
  advisorId        String? // ID ของอาจารย์ที่ปรึกษา (สำหรับนักศึกษา)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // ความสัมพันธ์
  studentsAdvised User[]         @relation("AdvisorToStudent")
  advisor         User?          @relation("AdvisorToStudent", fields: [advisorId], references: [id])
  announcements   Announcement[]
  appointments    Appointment[]
}

// โมเดลสำหรับประกาศ
model Announcement {
  id          String   @id @default(uuid())
  advisorId   String
  title       String
  description String?
  fileUrl     String?
  fileName    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // ความสัมพันธ์
  advisor User @relation(fields: [advisorId], references: [id])
}

// โมเดลสำหรับการนัดหมาย
model Appointment {
  id          String   @id @default(uuid())
  advisorId   String
  studentId   String
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  status      String // "pending", "approved", "rejected", "completed"
  location    String? // สถานที่นัดหมาย
  note        String? // บันทึกเพิ่มเติม
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // ความสัมพันธ์
  advisor User @relation(fields: [advisorId], references: [id])
}

// โมเดลสำหรับการสนทนา
model Comment {
  id               String   @id @default(uuid())
  advisorId        String
  studentId        String
  content          String
  isAdvisorComment Boolean // true = ข้อความจากอาจารย์, false = ข้อความจากนักศึกษา
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}
